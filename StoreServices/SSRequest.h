/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "SSCoding-Protocol.h"

@class NSLock, NSString, SSRequestGroup;

@interface SSRequest : NSObject <SSCoding>
{
    int _backgroundTaskIdentifier;
    BOOL _cancelAfterTaskExpiration;
    id <SSRequestDelegate> _delegate;
    SSRequestGroup *_group;
    NSString *_groupIdentifier;
    NSString *_identifier;
    NSLock *_lock;
    int _state;
}

@property(nonatomic) BOOL shouldCancelAfterTaskExpiration; // @synthesize shouldCancelAfterTaskExpiration=_cancelAfterTaskExpiration;
@property(retain, nonatomic) NSString *requestIdentifier; // @synthesize requestIdentifier=_identifier;
@property(retain, nonatomic) NSString *requestGroupIdentifier; // @synthesize requestGroupIdentifier=_groupIdentifier;
@property(nonatomic) id <SSRequestDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_setRequestState:(int)arg1;
- (id)_newIdentifier;
- (void)_finish;
- (void)_failWithError:(id)arg1;
- (void)_endBackgroundTask;
- (void)_beginBackgroundTask;
- (void)_requestFinishedNotification:(id)arg1;
- (void)_requestFailedNotification:(id)arg1;
- (void)_mainThreadDaemonExited:(id)arg1;
- (void)_daemonExited:(id)arg1;
- (void)unregisterForDaemonNotifications;
@property(nonatomic) SSRequestGroup *requestGroup;
- (void)sendDidFinish;
- (void)sendDidFailWithError:(id)arg1;
- (void)registerForDaemonNotifications;
- (BOOL)issueRequestForIdentifier:(id)arg1 error:(id *)arg2;
- (BOOL)handleFinishResponse:(id)arg1 error:(id *)arg2;
- (id)handleFailureResponse:(id)arg1;
- (void)handleDaemonExit;
- (void)handleBackgroundTaskExpiration;
- (void)awakeFromDaemonInRequestGroup:(id)arg1;
- (BOOL)start;
@property(readonly) int requestState;
- (void)disconnect;
- (void)cancel;
- (id)initWithXPCEncoding:(void *)arg1;
- (id)initWithPropertyListEncoding:(id)arg1;
- (void *)copyXPCEncoding;
- (id)copyPropertyListEncoding;
- (void)dealloc;
- (id)init;
- (id)_initSSRequest;

@end

