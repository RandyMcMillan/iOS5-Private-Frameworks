/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

@class NSMachPort, NSRecursiveLock, NSString, NSTimer, PCPersistentTimer;

@interface PCPersistentInterfaceManager : NSObject
{
    NSRecursiveLock *_lock;
    struct __CFDictionary *_delegatesAndRunLoops;
    struct __CFSet *_WWANInterfaceAssertionDelegates;
    NSTimer *_WWANInterfaceAssertionDisableTimer;
    struct __CFSet *_WiFiAutoAssociationDelegates;
    PCPersistentTimer *_WiFiAutoAssociationDisableTimer;
    struct __CFSet *_wakeOnWiFiDelegates;
    PCPersistentTimer *_wakeOnWiFiDisableTimer;
    void *_ctServerConnection;
    NSMachPort *_machPort;
    void *_interfaceAssertion;
    void *_wifiManager;
    void *_reachability;
    int _WWANContextIdentifier;
    NSString *_WWANInterfaceName;
    BOOL _isWWANInterfaceUp;
    BOOL _isWWANInterfaceDataActive;
    BOOL _isWWANInHomeCountry;
    BOOL _hasWWANStatusIndicator;
    BOOL _isPowerStateDetectionSupported;
    BOOL _isWWANInterfaceInProlongedHighPowerState;
    BOOL _isWWANInterfaceActivationPermitted;
    double _lastActivationTime;
    int _wwanRSSI;
    BOOL _belowRSSIThreshold;
    BOOL _isInCall;
    BOOL _isInternetReachable;
    BOOL _isInternetReachableViaWiFi;
    BOOL _isWakeOnWiFiSupported;
    BOOL _isWakeOnWiFiEnabled;
    BOOL _shouldOverrideOnCallBehavior;
}

+ (id)sharedInstance;
- (id)init;
- (void)addDelegate:(id)arg1 callbackRunLoop:(id)arg2;
- (void)removeDelegate:(id)arg1;
- (void)_createCTConnection;
- (void)_mainThreadDelayedInvalidation;
- (void)_ctConnectionWasInvalidated;
- (void)_createReachabilityMonitor;
- (void)handleMachMessage:(void *)arg1;
- (void)_serverCallback:(id)arg1 info:(id)arg2;
- (void)_serverCallbackLocked:(id)arg1 info:(id)arg2;
- (BOOL)_wwanRSSIBelowThresholdAndWoWAvailableLocked;
- (void)_updateWWANInterfaceUpStateLocked;
- (void)_reachabilityCallback:(unsigned int)arg1;
- (void)_reachabilityCallbackLocked:(unsigned int)arg1;
- (void)_scheduleCalloutsForSelector:(SEL)arg1;
- (void)_performCalloutsForSelectorValue:(id)arg1;
@property(readonly) BOOL isWWANInterfaceUp;
@property(readonly) NSString *WWANInterfaceName;
- (id)WiFiInterfaceName;
@property(readonly) BOOL doesWWANInterfaceExist;
@property(readonly) BOOL isPowerStateDetectionSupported;
@property(readonly) BOOL isWWANInterfaceInProlongedHighPowerState;
@property(readonly) BOOL isWWANInterfaceActivationPermitted;
@property(readonly) BOOL isWWANInHomeCountry;
@property(readonly) BOOL isInCall;
@property(readonly) BOOL isInternetReachable;
@property(readonly) BOOL isInternetReachableViaWiFi;
@property(readonly) BOOL isWakeOnWiFiSupported;
@property(readonly) BOOL areAllNetworkInterfacesDisabled;
- (void)keepWWANInterfaceUp:(BOOL)arg1 forDelegate:(id)arg2;
- (BOOL)_wantsWWANInterfaceAssertion;
- (void)_updateWWANInterfaceAssertions;
- (void)_updateWWANInterfaceAssertionsLocked;
- (void)_createWiFiManager;
- (void)_populateWakeOnWiFiCapabliity;
- (void)_populateWakeOnWiFiCapabliityLocked;
- (void)enableWiFiAutoAssociation:(BOOL)arg1 forDelegate:(id)arg2;
- (void)_adjustWiFiAutoAssociation;
- (void)_adjustWiFiAutoAssociationLocked;
- (void)enableWakeOnWiFi:(BOOL)arg1 forDelegate:(id)arg2;
- (BOOL)_wantsWakeOnWiFiEnabled;
- (void)_adjustWakeOnWiFi;
- (void)_adjustWakeOnWiFiLocked;
- (id)dhcpT1RenewalDate;
- (id)dhcpHalfLeaseExpirationDate;
- (BOOL)_allowBindingToWWAN;
- (void)bindSocket:(int)arg1 toWWANInterface:(BOOL)arg2;
- (void)bindSocketToWWANInterface:(int)arg1;
- (void)bindCFStream:(struct __CFReadStream *)arg1 toWWANInterface:(BOOL)arg2;
- (void)bindCFStreamToWWANInterface:(struct __CFReadStream *)arg1;
- (id)urlConnectionBoundToWWANInterface:(BOOL)arg1 withRequest:(id)arg2 delegate:(id)arg3 usesCache:(BOOL)arg4 maxContentLength:(long long)arg5 startImmediately:(BOOL)arg6 connectionProperties:(id)arg7;
- (id)urlConnectionBoundToWWANInterfaceWithRequest:(id)arg1 delegate:(id)arg2 usesCache:(BOOL)arg3 maxContentLength:(long long)arg4 startImmediately:(BOOL)arg5 connectionProperties:(id)arg6;

@end

