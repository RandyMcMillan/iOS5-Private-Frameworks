/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "APSConnectionDelegate-Protocol.h"
#import "NSNetServiceBrowserDelegate-Protocol.h"
#import "NSNetServiceDelegate-Protocol.h"

@class APSConnection, NSMutableDictionary, NSMutableSet, NSSet, NSString;

@interface UBBonjourManager : NSObject <NSNetServiceDelegate, NSNetServiceBrowserDelegate, APSConnectionDelegate>
{
    _Bool _suspended;
    _Bool _invalidated;
    _Bool _setupComplete;
    _Bool _use_ssl;
    _Bool _previously_suspended;
    _Bool _bonjourDisabled;
    _Bool _srvBonjourDisabled;
    struct dispatch_queue_s *_notifyQueue;
    struct __CFRunLoop *_runloop;
    unsigned char _uuid[16];
    int _port;
    void *_notify_cb;
    void *_mme_set_token_cb;
    void *_mme_push_cb;
    void *_notify_ctx;
    NSString *_domain;
    NSString *_mmeUUID;
    NSString *_pushEnvironment;
    NSSet *_vlans;
    NSMutableDictionary *_identities;
    struct __CFDictionary *_uuidCtx;
    int _periodicPushInterval;
    unsigned long long _refetchMMeConfigTime;
    struct dispatch_source_s *_periodicPushTimer;
    APSConnection *_pushConnection;
    struct {
        NSMutableDictionary *_browsers;
        NSMutableSet *_resolvingNetServices;
        struct {
            NSMutableDictionary *_byFQDN;
            NSMutableDictionary *_byIdentity;
        } _monitoredNetServices;
    } _browserState;
    struct {
        NSMutableDictionary *_netServices;
    } _publishedState;
    struct {
        struct {
            NSMutableDictionary *_byFQDN;
            NSMutableDictionary *_byEndPoint;
            NSMutableDictionary *_byUUID;
        } _foundServices;
        NSMutableDictionary *_preferredFQDN;
        NSMutableDictionary *_collectionUUIDs;
    } _serviceState;
}

- (void)connection:(id)arg1 didReceiveMessageForTopic:(id)arg2 userInfo:(id)arg3;
- (void)connection:(id)arg1 didReceivePublicToken:(id)arg2;
- (void)netServiceBrowser:(id)arg1 didRemoveService:(id)arg2 moreComing:(BOOL)arg3;
- (void)netService:(id)arg1 didUpdateTXTRecordData:(id)arg2;
- (void)netServiceDidResolveAddress:(id)arg1;
- (void)netService:(id)arg1 didNotResolve:(id)arg2;
- (void)netServiceBrowser:(id)arg1 didFindService:(id)arg2 moreComing:(BOOL)arg3;
- (void)_processNetService:(id)arg1 type:(int)arg2;
- (CDStruct_6703a762 *)copyOnlinePeerContexts:(unsigned int *)arg1;
- (void)setContext:(void *)arg1 forUUID:(unsigned char [16])arg2;
- (void)invalidate;
- (void)resume;
- (void)suspend;
- (_Bool)uuidOnline:(unsigned char [16])arg1;
- (id)copyPreferredEndPointURL:(unsigned char [16])arg1;
- (_Bool)_havePreferredFQDN:(id)arg1;
- (void)setPreferredFQDN:(id)arg1 forUUID:(unsigned char [16])arg2;
- (void)setMMeUUID:(unsigned char [16])arg1;
- (void)setupMMeEnvironment:(id)arg1 mme_set_token_cb:(void *)arg2 mme_push_cb:(void *)arg3;
- (void)removeIdentity:(id)arg1;
- (void)updateIdentity:(id)arg1 collections:(id)arg2;
- (void)setupClient:(unsigned char [16])arg1 port:(int)arg2 use_ssl:(_Bool)arg3 notify_cb:(void *)arg4 notify_ctx:(void *)arg5 domain:(id)arg6 vlans:(id)arg7;
- (void)_rearmPeriodicPushTimer;
- (void)sendMMePush:(id)arg1;
- (void)_refetchMMeConfig;
- (void)_updateServicesForIdentity:(id)arg1;
- (id)_serviceDataForIdentity:(id)arg1 prependedID:(id)arg2;
- (id)_getIdentityForNetService:(id)arg1 rnd:(unsigned int *)arg2;
- (_Bool)_splitNetServiceName:(id)arg1 rnd:(unsigned int *)arg2 hashedID:(id *)arg3;
- (id)_fqdnForNetService:(id)arg1;
- (id)_fqdnForServiceDict:(id)arg1;
- (id)_endPointForServiceDict:(id)arg1;
- (void)_runBlockOnRL:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)_initNetworkState;
- (void)_deallocNetworkState;
- (void)_initPushState;
- (void)_deallocPushState;
- (void)_initServiceState;
- (void)_deallocServiceState;
- (void)_initPublishedState;
- (void)_deallocPublishedState;
- (void)_restartBrowsers;
- (void)_initBrowserState;
- (void)_deallocBrowserState;
- (_Bool)_isValid;

@end

