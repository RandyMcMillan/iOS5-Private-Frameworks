/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

@class NSCondition, NSThread, TSUMemoryWatcher, TSUPointerKeyDictionary, TSURetainedPointerKeyDictionary;

@interface TSUFlushingManager : NSObject
{
    TSURetainedPointerKeyDictionary *_objects;
    struct set<TSUFlushableObjectInfo*, TSUFlushableObjectInfoPointerFlushingOrderLess, std::allocator<TSUFlushableObjectInfo*>> *_sortedObjects;
    struct set<TSUFlushableObjectInfo*, TSUFlushableObjectInfoPointerTimeStampLess, std::allocator<TSUFlushableObjectInfo*>> *_sortedNewObjects;
    TSUPointerKeyDictionary *_inactiveObjects;
    unsigned int _clock;
    BOOL _alwaysFlushing;
    BOOL _stopFlushing;
    BOOL _stopFlushingWhenQueueEmpty;
    BOOL _isFlushing;
    id <TSUFlushable> _flushingObject;
    BOOL _isWaitingForFlush;
    NSCondition *_cond;
    NSCondition *_isFlushingCond;
    TSUMemoryWatcher *_memoryWatcher;
    NSThread *_bgThread;
}

+ (id)_singletonAlloc;
+ (id)sharedManager;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)retain;
- (unsigned int)retainCount;
- (void)release;
- (id)autorelease;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)dealloc;
- (void)addObject:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)protectObject:(id)arg1;
- (void)stopProtectingObject:(id)arg1;
- (void)doneWithObject:(id)arg1;
- (void)unsafeToFlush:(id)arg1;
- (void)safeToFlush:(id)arg1 wasAccessed:(BOOL)arg2;
- (void)didEnterBackground;
- (void)willEnterForeground;
- (void)memoryLevelIncreased:(int)arg1 was:(int)arg2;
- (void)memoryLevelDecreased:(int)arg1 was:(int)arg2;
- (void)_flushAllEligible;
- (void)_startFlushingObjects;
- (void)_stopFlushingObjects;
- (void)_backgroundThread:(id)arg1;
- (BOOL)isNewObject:(struct TSUFlushableObjectInfo *)arg1;
- (struct TSUFlushableObjectInfo *)eraseInfoForObject:(id)arg1;
- (void)insertObjectInfo:(struct TSUFlushableObjectInfo *)arg1;
- (void)transferNewObjects;
- (void)advanceClock;
- (BOOL)controlsActiveObject:(id)arg1;
- (BOOL)controlsInactiveObject:(id)arg1;
- (void)_didUseObject:(id)arg1;

@end

