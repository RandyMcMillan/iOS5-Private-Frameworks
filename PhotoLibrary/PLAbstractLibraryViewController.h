/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "UIViewController.h"

#import "PLAlbumChangeObserver-Protocol.h"
#import "PLAlbumListChangeObserver-Protocol.h"
#import "PLPhotoLibraryShouldReloadObserver-Protocol.h"

@class NSArray, NSObject<PLAlbumContainer>, NSObject<PLAssetContainer>;

@interface PLAbstractLibraryViewController : UIViewController <PLAlbumListChangeObserver, PLAlbumChangeObserver, PLPhotoLibraryShouldReloadObserver>
{
    struct NSObject *_albumList;
    struct NSObject *_hiddenAlbum;
    NSArray *_syncProgressAlbums;
    unsigned int _previousAlbumsCount;
    unsigned int _ignoreReorderNotificationCount;
    unsigned int _justCreatedAlbumIndex;
    unsigned int _lastPendingCount;
    unsigned int _totalItemsCount;
    id _didSelectAlbumHandler;
    struct {
        unsigned int contentMode:8;
        unsigned int hasContent:1;
        unsigned int albumsListViewInSync:1;
        unsigned int syncProgressVisible:1;
        unsigned int visible:1;
        unsigned int reserved:20;
    } _alcFlags;
}

@property(copy, nonatomic) id didSelectAlbumHandler; // @synthesize didSelectAlbumHandler=_didSelectAlbumHandler;
@property(readonly, nonatomic) NSObject<PLAlbumContainer> *albumList; // @synthesize albumList=_albumList;
@property(retain, nonatomic) NSObject<PLAssetContainer> *hiddenAlbum; // @synthesize hiddenAlbum=_hiddenAlbum;
- (void)_updateAlbumsWithNotification:(id)arg1;
- (void)_updateSyncProgress;
- (void)_updateHasContent;
- (void)addAlbum:(id)arg1;
- (void)shouldReload:(id)arg1;
- (void)albumDidChange:(id)arg1;
- (void)albumListDidChange:(id)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewDidUnload;
- (id)_syncProgressAlbums;
- (void)setHiddenAlbum:(id)arg1 animated:(BOOL)arg2;
- (void)setAlbumList:(struct NSObject *)arg1 contentMode:(int)arg2;
@property(readonly, nonatomic) int contentMode;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)init;

@end

